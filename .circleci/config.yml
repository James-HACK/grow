version: 2
jobs:
  init:
    working_directory: ~/grow
    docker:
      - image: grow/grow-internal-image
    steps:
      - checkout

      - restore_cache:
          key: ui-{{ .Branch }}-{{ checksum "grow/ui/package.json" }}

      - run:
          name: Build UI
          command: make build-ui

      - save_cache:
          key: ui-{{ .Branch }}-{{ checksum "grow/ui/package.json" }}
          paths:
            - "grow/ui/node_modules"

      - persist_to_workspace:
          root: ~/grow
          paths:
            - .coveragerc
            - .git/*
            - bin/*
            - grow/*
            - scripts/*
            - description.txt
            - grow.spec
            - install.py
            - Makefile
            - MANIFEST.in
            - package.json
            - pylintrc
            - requirements-dev.txt
            - requirements.txt
            - setup.py

  pylint:
    working_directory: ~/grow
    docker:
      - image: grow/grow-internal-image
    steps:
      - attach_workspace:
          at: ~/grow

      - run:
          name: Virtual Env
          command: virtualenv env --distribute

      - restore_cache:
          key: pip-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: Pip Install
          command: |
            set -e
            . env/bin/activate
            pip install -r requirements-dev.txt

      - run:
          name: Pylint
          command: make test-pylint-circle

      - save_cache:
          key: pip-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "env"

  release-package-linux:
    working_directory: ~/grow
    docker:
      - image: grow/grow-internal-image
    steps:
      - attach_workspace:
          at: ~/grow

      - run:
          name: Virtual Env
          command: virtualenv env --distribute

      - restore_cache:
          key: pip-release-linux-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: Pip Install
          command: |
            set -e
            . env/bin/activate
            pip install -r requirements-dev.txt

      - save_cache:
          key: pip-release-linux-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "env"

      - run:
          name: Build Release
          command: |
            set -e
            . env/bin/activate
            pyinstaller grow.spec

      - run:
          name: Package
          command: |
            set -e
            cd dist
            zip -r "Grow-SDK-Linux-${CIRCLE_TAG}.zip" grow
            cd ..

      # Currently causes a seg fault in docker.
      # - run:
      #     name: Test Packaged Grow
      #     command: ./dist/grow
      #
      # - run:
      #     name: Test Packaged Grow Build
      #     command: ./dist/grow build ./grow/testing/testdata/pod

      - run:
          name: Upload to GitHub
          command: ghr -draft -u grow $CIRCLE_TAG "dist/Grow-SDK-Linux-${CIRCLE_TAG}.zip"

      - store_artifacts:
          path: dist/

  release-package-osx:
    working_directory: ~/grow
    macos:
      xcode: "9.0"
    steps:
      - attach_workspace:
          at: ~/grow

      - run:
          name: Install Go
          command: brew install golang

      - run:
          name: Update GOROOT
          command: echo 'export GOROOT=/usr/local/opt/go/libexec' >> $BASH_ENV
      - run:
          name: Update GOPATH
          command: echo 'export GOPATH=$HOME/gocode' >> $BASH_ENV
      - run:
          name: Update PATH
          command: echo 'export PATH=$PATH:$GOROOT/bin:$GOPATH/bin' >> $BASH_ENV

      - run:
          name: Install ghr
          command: go get -u github.com/tcnksm/ghr

      - run:
          name: Virtual Env
          command: virtualenv env --distribute

      - restore_cache:
          key: pip-release-osx-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: Pip Install
          command: |
            set -e
            . env/bin/activate
            pip install -r requirements-dev.txt

      - save_cache:
          key: pip-release-osx-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "env"

      - run:
          name: Build Release
          command: |
            set -e
            . env/bin/activate
            pyinstaller grow.spec

      - run:
          name: Package
          command: |
            set -e
            cd dist
            zip -r "Grow-SDK-Mac-${CIRCLE_TAG}.zip" grow
            cd ..

      - run:
          name: Test Packaged Grow
          command: ./dist/grow

      - run:
          name: Test Packaged Grow Build
          command: ./dist/grow build ./grow/testing/testdata/pod

      - run:
          name: Upload to GitHub
          command: ghr -draft -u grow $CIRCLE_TAG "dist/Grow-SDK-Mac-${CIRCLE_TAG}.zip"

      - store_artifacts:
          path: dist/

  release-package-pypi:
    working_directory: ~/grow
    docker:
      - image: grow/grow-internal-image
    steps:
      - attach_workspace:
          at: ~/grow

      - run:
          name: Virtual Env
          command: virtualenv env --distribute

      - restore_cache:
          key: pip-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: Pip Install
          command: |
            set -e
            . env/bin/activate
            pip install -r requirements-dev.txt

      - save_cache:
          key: pip-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "env"

      - run:
          name: Create Distribution
          command:  |
            set -e
            . env/bin/activate
            python setup.py sdist bdist_wheel

      - run:
          name: Pip Install
          command: |
            set -e
            . env/bin/activate
            pip install urllib3[secure] --upgrade
            pip install twine --upgrade

      # - run:
      #     name: Twine Upload
      #     command: |
      #       set -e
      #       . env/bin/activate
      #       twine upload dist/grow-$(<grow/VERSION)*

      - store_artifacts:
          path: dist/

  test:
    working_directory: ~/grow
    docker:
      - image: grow/grow-internal-image
    steps:
      - attach_workspace:
          at: ~/grow

      - run:
          name: Virtual Env
          command: virtualenv env --distribute

      - restore_cache:
          key: pip-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: Pip Install
          command: |
            set -e
            . env/bin/activate
            pip install -r requirements-dev.txt

      - save_cache:
          key: pip-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "env"

      - run:
          name: Run Tests
          command: make test-nosetests-circle

      - run:
          name: Code Coverage
          command: |
            set -e
            . env/bin/activate
            ./env/bin/codecov

      - run:
          name: Test build
          command: ./scripts/grow build ./grow/testing/testdata/pod


  test-gae:
    working_directory: ~/grow
    docker:
      - image: grow/grow-internal-image
    steps:
      - attach_workspace:
          at: ~/grow

      - run:
          name: Virtual Env
          command: virtualenv env --distribute

      - restore_cache:
          key: pip-gae-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: Pip Install
          command: |
            set -e
            . env/bin/activate
            pip install -r requirements-dev.txt

      - save_cache:
          key: pip-gae-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "env"

      - run:
          name: Hack Setup for Tests
          # https://github.com/faisalraja/env/issues/11
          command: |
            set -e
            cat requirements.txt > ./env/requirements-gae.txt
            echo "pyasn1-modules>=0.0.8" >> ./env/requirements-gae.txt

      - run:
          name: Run Tests
          command: make test-gae-circle

      - run:
          name: Code Coverage
          command: |
            set -e
            . env/bin/activate
            ./env/bin/codecov

      - run:
          name: Test build
          command: ./scripts/grow build ./grow/testing/testdata/pod

  test-osx:
    working_directory: ~/grow
    macos:
      xcode: "9.0"
    steps:
      - attach_workspace:
          at: ~/grow

      - run:
          name: Virtual Env
          command: virtualenv env --distribute

      - restore_cache:
          key: pip-osx-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: Pip Install
          command: |
            set -e
            . env/bin/activate
            pip install -r requirements-dev.txt

      - run:
          name: Run Tests
          command: make test-nosetests-circle

      - save_cache:
          key: pip-osx-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "env"

      - run:
          name: Code Coverage
          command: |
            set -e
            . env/bin/activate
            ./env/bin/codecov

      - run:
          name: Test build
          command: ./scripts/grow build ./grow/testing/testdata/pod

default_workflow: &default_workflow
  filters:
    tags:
      only: /.*/

workflows:
  version: 2
  build:
    jobs:
    - init:
        <<: *default_workflow
    # - pylint:
    #     <<: *default_workflow
    #     requires:
    #     - init
    # - test:
    #     <<: *default_workflow
    #     requires:
    #     - init
    # - test-gae:
    #     <<: *default_workflow
    #     requires:
    #     - init
    # - test-osx:
    #     <<: *default_workflow
    #     requires:
    #     - init
    # - release-package-linux:
    #     requires:
    #     - test
    #     filters:
    #       tags:
    #         only: /.*/
    #       branches:
    #         ignore: /.*/
    # - release-package-osx:
    #     requires:
    #     - test-osx
    #     filters:
    #       tags:
    #         only: /.*/
    #       branches:
    #         ignore: /.*/
    - release-package-pypi:
        requires:
        - init
        # - release-package-linux
        # filters:
        #   tags:
        #     only: /.*/
        #   branches:
        #     ignore: /.*/
